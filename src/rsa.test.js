import rsa from './rsa'

test('Generate Key Pair', async () => {
    const { publicKey, privateKey } = await rsa.GeneratreKeyPair();
    expect(publicKey).not.toBe(null);
    expect(privateKey).not.toBe(null);
});

test('Encrypt / Decrypt Message', async () => {
    const message = "hello world";
    const publicKeyEncoded = 'LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2Nms0bHZ1MjFKZktpL2VHRVUwRwptMjRuay9OUytCRGE2bTB4NmZPNkZrOFpDeElTbHNqV3dsZDN1SWs3aUwxR283UjFkcE5vVlNTRkdjVlptSFZRCnJPenF0ZnpvZW5iVjl5RW5HZVU4amw3bkdaMXdJRUgzS0xqVDZNL1lpZGYvcXQrM25vTjhNdXJBMkM5a2w1YmkKRjloWkNOVExKOUM1bGZINFBOYzF0MWI3ODIvdTVFaVQrVmg0S2tYaTBCZ2lkcllGUE9KaXh4T2dJdHNvUkt3SAo0Ryt0Tjg1Q2lXT2VZTUpONi9TenJZSVVwWWZVa3ljRit5eWdwQjAvbVBmeG9iTzJYeU5TdDhKamQrLzVMMGV3Cm5vTGw1eW0xdk15RU5MUUtiYzBpOVZPM0phRVM1dVU2M21NMklPaGIrLzZTVkVQNTNKRkdjWEl6d0IreElMbHkKRFFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==';
    const privateKeyEncoded = 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQy9xVGlXKzdiVWw4cUwKOTRZUlRRYWJiaWVUODFMNEVOcnFiVEhwODdvV1R4a0xFaEtXeU5iQ1YzZTRpVHVJdlVhanRIVjJrMmhWSklVWgp4Vm1ZZFZDczdPcTEvT2g2ZHRYM0lTY1o1VHlPWHVjWm5YQWdRZmNvdU5Qb3o5aUoxLytxMzdlZWczd3k2c0RZCkwyU1hsdUlYMkZrSTFNc24wTG1WOGZnODF6VzNWdnZ6Yis3a1NKUDVXSGdxUmVMUUdDSjJ0Z1U4NG1MSEU2QWkKMnloRXJBZmdiNjAzemtLSlk1NWd3azNyOUxPdGdoU2xoOVNUSndYN0xLQ2tIVCtZOS9HaHM3WmZJMUszd21OMwo3L2t2UjdDZWd1WG5LYlc4eklRMHRBcHR6U0wxVTdjbG9STG01VHJlWXpZZzZGdjcvcEpVUS9uY2tVWnhjalBBCkg3RWd1WElOQWdNQkFBRUNnZ0VBRHAwVGdJZWUwQ1RtdjdkVzFKamY2UmdFRW9iYUM2b1ZWd3lPWXIwL3NoWEQKM2hFNXM1K0txSFRNM3hndm51UjNyMkhDRnhGMFFoR3Z5R0JBelp3Y1U2TVkzbGx6VEdzbE0xdW14Sld6QVZRQgpJUFhkSjhoLzFPNEswbFNPdVN2c0JaWmJSTTNYdVhZbTBCVUZBWDN5clVqRXVTU29mTmV3WHR0OVJ2NU56VFhGCnYzeXhKT3liOUx5MlFFc1YzSmlsdE1hM3hjcnpoS3Z1OFppRlBaemxSTVlmTVNOSURJU0EwVkdYM2REQ1B0UnYKaFBIaEtLUDhSMW5LZ2RMbDFwSUk3YnpId3ZPRnRlY2YrR0doOUk2SSt5N2lad012WUtvS1p3ejl1bVBSd2NjTQpoZ0FFNUxuaGRPUG1QcDZmcFhmeW9rQzVwZWdDMXEwdzZaTVdMOEhsalFLQmdRREpYNmpPanZRY1RuUW1oZlV0CkliZTVsTkpXcGpyME5MbnZGV2dpaWxDM015MVhUTDVHM2N6NTQ3V2o3UnI2V3JQdnhZeE1WalpkUEZ1RWgzRG0KN1NCZkV4ZTNkSER4Qk8xaWVLL2MvVUF0RFBWMmMyQXgrSVFTS0ZBaTR4L1VCc2JGN0QwZWFVVm5EeDNEc3ZPWAowWnRIWCs4UCs0OXlKT2FQWEFpMWdPL1dzd0tCZ1FEenB4Rzh0WTNOQUEzck96bEtEOHFZZER2ZmlmYUVLTDJjCmUxM2ZXV3ZSU0dyQ0o4dy9HYWV2YU9VTm5reTcydGJWMjQ1bnlFZkJhOTdsN2ZzMU1oSzM2bnNoblI1eDBJREoKZlAyeXBvQy80YThxbW56TlpKMGdZY1dQdzVENFgxN2UxSEFuUmYvVERZeXp1Tnk1dGJSOC94OThLVnpHNUg2TQpVeFRLenl2MFB3S0JnRXJtUWF0U2tJbFd4T3p2TmxvckNHTUdiNVc3RG9KMmVoSHJMR2hzZWNrcVI5c0l1RjB6CmNtSWZ5QmZJd1JnTlZKQUNNa1RTYkRZUmxSaWVKK2c4bXFYQ1BEZ0lIMW9HTXlWRkxtUkw3ZXJUdnhqbm9RZjEKSDJxQmhBejEzWWpIWEhlUmZzb283WjkvaDlxYVhQQkREalptQUUwNWpBa3dvSEVDRWxzd01nVHhBb0dBUXRIZApubWdYOUZHQWY3TmxPYmRzOHpSbE94L0YyR2FuNFdNLzBrSGV2SzFrZ2N5U1NmZktNZVBOZFZlbGFadFJjYUxkCndmNStGMEJ6QjVHbFkraFFrOW1kWFJHT3lOM0tnL2RnUi84N3JlUEJ1eWhVODZzVklFMVA5ZVpIT3FaRkNVMHYKV01Yc3E3KzZoNHM2RlVBTXVIN3E3bzBWWVlKR1prdGVsMlFMaE5jQ2dZQnFqazFSTDJvdGh6bzUrR1VrMVU4MQora0FVRGEyK2YyVVJQYU1GSEE5bWpvcngzMDFLSGYrZGRadTd2Wll5aHVmTFFmLzdyUHZkRXp4QXQ2ekxMaHc0ClQxbWFqZmlkays4dDE1L01sRmFXdkRrekZUOVRqQy9FNWsyUnRsbEx3Y2lYc3hWTGY1VXlBOEZLM0h1em01SW4KTkc5MHVjS0tJS2RaRUdKMnBzd3VQUT09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K';
   
    // ecnrypt
    const ciphertext = await rsa.EncryptMessage(publicKeyEncoded, message);
    expect(ciphertext).not.toBe(null);

    // decrypt
    const decrypttext = await rsa.DecryptMessage(privateKeyEncoded, ciphertext)
    expect(decrypttext).toBe(message);
});
