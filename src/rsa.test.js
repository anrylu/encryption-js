import rsa from './rsa'

test('Generate Key Pair', async () => {
    const { publicKey, privateKey } = await rsa.GeneratreKeyPair();
    expect(publicKey).not.toBe(null);
    expect(privateKey).not.toBe(null);
});

test('Encrypt / Decrypt Message', async () => {
    const text = "hello world";
    const publicKeyEncoded = 'LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMTFFM1ROU0o5N0JCcnlTT25Pd2EKT015eElOaDArc2tEU2drYWk0VFhoOXdqc3ptYmJJV2tRNlA2Ri9IT1JxR2lXQjAvMnEzcTZBR2UwT0JMekx3cgpQV3I4alNBWDJxektEQ3BqUmlSeXNJcnQ3YmpEMDMyUzFNOFVVeVVJYS84QUdDcHd0TWVxQ0FNQmNxdkNSUVJ4CklGbWdhb0diYWNJaFRvRTdNeDhaOU52ZEFiOHR2UWNDYWs0Mkg3V0FFSmFia1FQM1FiT0xsOUFWaUlNcExlbUYKZGVNWXYxTm1LWWJ2SFI1UTdzcHYzUldRV1Q1WHhES0dhaEZwQWdpNjZ4YjQvZFVQVVE1RmUyMHdoTUdPb3R1VgpYcytEYUgya0hLWWI2TEw4V3BxRjJyb0lUUXp2bnhoV1FvRXZ0Wnh3bStwb0p2WUJHYjA3K3VCenpwUDNIdjczCldRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K';
    const privateKeyEncoded = 'LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUURYVVRkTTFJbjNzRUd2CkpJNmM3Qm80ekxFZzJIVDZ5UU5LQ1JxTGhOZUgzQ096T1p0c2hhUkRvL29YOGM1R29hSllIVC9hcmVyb0FaN1EKNEV2TXZDczlhdnlOSUJmYXJNb01LbU5HSkhLd2l1M3R1TVBUZlpMVXp4UlRKUWhyL3dBWUtuQzB4Nm9JQXdGeQpxOEpGQkhFZ1dhQnFnWnRwd2lGT2dUc3pIeG4wMjkwQnZ5MjlCd0pxVGpZZnRZQVFscHVSQS9kQnM0dVgwQldJCmd5a3Q2WVYxNHhpL1UyWXBodThkSGxEdXltL2RGWkJaUGxmRU1vWnFFV2tDQ0xyckZ2ajkxUTlSRGtWN2JUQ0UKd1k2aTI1VmV6NE5vZmFRY3Bodm9zdnhhbW9YYXVnaE5ETytmR0ZaQ2dTKzFuSENiNm1nbTlnRVp2VHY2NEhQTwprL2NlL3ZkWkFnTUJBQUVDZ2dFQVQ4bGpvWSs4bEZEMjlneW80Qk5KWURUUmlpZExxY2FrOW1GTE9kbis5L1FtCk1ucXRVbGh2VnpWRExtNUhEcnRFYWp4a2RnY3VYY3lENmtqRExkbW9lRGpWM3dHK2RTVEVOaC9hNjVvRCtkRngKZXo2VktpQ0ZNV0NPMm9TRmkyZFJ4S0t0WXYvOXpMdzRaQ0tyZVdHOC9jelllYjhQTlBCZjRUUllHSWgwMk51VwpBV05hMmgwVldKRHk2YVRUVGdHWHM2SGJKODBqWFA1YmJPVnZVdVoxSjlaT3dzWDVHSG5SRzFCb3BReWU3ZW4vClU0a29vNUZkT2lkZGpjcVo0RFp2ejQ4MWpRaEdSMDdZbGJZU3dIT1djYWhDd3NmazBTOFdqVGoxVVFmQ3ZYL1kKN0RRNVdXdngxQkNudUJBZExGZ3FzUWtUZzdaTGJobGVhSWNpS01tU2dRS0JnUUR5alZreW53UHI2YVpjcUxMaAo3dCs1aFFyaUxhcHY3YW5INmhXdFZjaXExQ0xsTUI5Q1o3SUdydnBGM3MyYTlYWFpXbDljTHZHdkZ6SHlwT3hOCmNtM01KczQ3Um9wYUlUUHo1aDlkSHVrS0UyK2w4UmRFMVBVMjd5SGd0bEd3MWgrTkJXb25odjFVRHJvcVZNN1YKSThXNDhXOFlDb0g4UThSeVdXTzI5MDlqeVFLQmdRRGpRVTkrVDhkektublVzYUphZDdrMGlCSnYxV0pwN3cwOQozZ0U5MElwdjNWT045bHJjSk9RVTN5djExbTJsbVhoVy84c25BWnYwRGVvdnBsZFRqL1JJY3JsbVlCMHdkTTdTClZhTXJQTm9oa2o5ODM5UFcxenhFSnBMWGRhTTZUdkpFUUxLeGhKM1F0YnBQYkt5MGIvQTllWkJ2SU52Ymc2aVUKNUYvV2tvUWZFUUtCZ0h3VlVaZHkvL2VWVFZWRHZGZVc4MzhlRDhaTHBGQ2tYZUgyMytZUDU1dDA4UEVjb0RGQgppVEtnRzByWlE0Zk5vTjl6dXlzV25POTh4MEdobTMyM1YzSkVPK2JaSEhnbFdrV2c2VlNqTm9iQUVMTHMxb0dSCkRHMXhBbnpKNkpxMXYraE41OU9XM0V3L1NIL1ZhUVppeVlqbWduWGpFa0p5akxJUEJ0TVlTOVg1QW9HQUFXTVUKcVNDemh2QnJiZkRubk1XK1M2UEkrUVhFWkFFaGc0OG5Vc2xERHd1Nnh0TUtHdTNldG9IbU1zbnNRV1orWlltSwpJK0xPb042MDN6V1VzdDNlRDlNamJveUhvUlFWYnhNMnU3elRXQUVjZ2hhYnBHUUw2aDZTSnQ2QThJb3EwRi9VCnQyQ24xZTVHQk5ZVTk4VDNJbWpyaU1JYWxXeG9Td0JaMVdWdmlRRUNnWUVBaXFjaHJDRVVYMVlpNXZhQlJKVDIKdzE5OVU5cmhKOEZVcU1CSXBEeUlXWjVaczFDdk1mbk1PYzRQdjRYNW1UdTVyZ1c2WnlUOUlsZlRLU3hWckZLcAp1c2dSWks1Y0ZVRXlsNEpBcWhqTVBFWHhKeGNpdjFtNHlYSEdXQzZGWWM3V0kxbjlFQlprQndBMi9qK2Y4ZklJCnlOUC9FZDFxVnBMMkZhVXVGL3hod3BBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=';
    
    // ecnrypt
    const ciphertext = await rsa.EncryptMessage(publicKeyEncoded, text);
    expect(ciphertext).not.toBe(null);

    // decrypt
    const decrypttext = await rsa.DecryptMessage(privateKeyEncoded, ciphertext)
    expect(decrypttext).toBe(text);
});
